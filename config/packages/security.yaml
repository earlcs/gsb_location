security:
    encoders: 
        Symfony\Component\Security\Core\User\User: plaintext
        App\Entity\User: plaintext
        #App\Entity\Clients: plaintext
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        #users_in_memory: { memory: null }
        in_memory: { memory: ~ }
        user_in_database:
            entity:
                class: App\Entity\User
                #class: App\Entity\Clients 
                property: pseudo
        #client_in_database:
            #entity:
                #class: App\Entity\Clients
                #property: pseudo
        #all_users:
            #chain:
                #providers: ['user_in_database', 'client_in_database']

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            #anonymous: lazy
            #provider: users_in_memory

            provider: user_in_database

            form_login:
                login_path: security_login
                check_path: security_login
                #username_parameter: "login_form[pseudo]"
                #password_parameter: "login_form[mdp]"
            
            logout:
                path: security_logout
                target: accueil

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
